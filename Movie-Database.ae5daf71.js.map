{"mappings":"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","sources":["<anon>","src/app.js","src/handleSearch.js","src/fetchMovieCredits.js","src/fetchMovieDetails.js","src/render.js","src/buildPage.js","src/localStorage.js","src/fetchMovieImages.js","src/filter.js","src/fetchMovieSearch.js","node_modules/@parcel/runtime-js/lib/runtime-9a04573f10e81187.js","src/fetchMoviesPopular.js"],"sourcesContent":["/* Todo\r\n\r\nCreate a data dashboard with data on movies, like IMDb\r\nThings to get from API:\r\nTitle, description, poster, genres, runtime, votes, languages, actors, release date, trailer, images, reviews\r\n\r\nUse methods like:\r\nmap()\r\nfilter()\r\nsort()\r\nreduce()\r\n\r\nDestructuring to get relevant values from objects and arrays\r\n\r\n*/ \nconst $8c3623352ddfd687$var$apiKey = \"1b4c8d03a375eaff8b7e021ed3e1206c\";\nconst $8c3623352ddfd687$export$e1749dc656927888 = async (id)=>{\n    const response = await fetch(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${$8c3623352ddfd687$var$apiKey}`);\n    const data = await response.json();\n    return data;\n};\n\n\n\nconst $a291d759013b4698$var$deleteBookmarksBtn = document.getElementById(\"delete-bookmarks\");\nlet $a291d759013b4698$var$movies = [];\n$a291d759013b4698$var$deleteBookmarksBtn.addEventListener(\"click\", ()=>{\n    $a291d759013b4698$var$movies = [];\n    localStorage.setItem(\"movies\", JSON.stringify($a291d759013b4698$var$movies));\n    (0, $6433e638ce53a5fb$export$8fc978d97ff76c3)($a291d759013b4698$var$movies);\n});\nconst $a291d759013b4698$export$7c6b17cf45d2b7e3 = ()=>{\n    localStorage.setItem(\"movies\", JSON.stringify($a291d759013b4698$var$movies));\n};\nconst $a291d759013b4698$export$f1b9a9bec1b8accb = ()=>{\n    const bookmarkedMovies = localStorage.getItem(\"movies\");\n    if (bookmarkedMovies) {\n        $a291d759013b4698$var$movies = JSON.parse(bookmarkedMovies);\n        (0, $6433e638ce53a5fb$export$8fc978d97ff76c3)($a291d759013b4698$var$movies);\n    }\n    return $a291d759013b4698$var$movies;\n};\nconst $a291d759013b4698$export$9601f9f7dfbe93ec = (filters)=>localStorage.setItem(\"filters\", JSON.stringify(filters));\nconst $a291d759013b4698$export$1933a9fe712fc1fd = ()=>JSON.parse(localStorage.getItem(\"filters\")) || {\n        sortType: \"\"\n    };\nconst $a291d759013b4698$export$f5dd83bf25cdebad = (title, popularity)=>{\n    const bookmarkBtn = document.createElement(\"button\");\n    bookmarkBtn.classList.add(\"bookmark-button\");\n    bookmarkBtn.textContent = \"Favorite\";\n    bookmarkBtn.addEventListener(\"click\", ()=>{\n        const movieObj = {\n            title: title,\n            popularity: popularity\n        };\n        const alreadyBookmarked = $a291d759013b4698$var$movies.some((m)=>m.title === movieObj.title);\n        if (!alreadyBookmarked) {\n            console.log(movieObj);\n            $a291d759013b4698$var$movies.push(movieObj);\n            $a291d759013b4698$export$7c6b17cf45d2b7e3();\n            (0, $6433e638ce53a5fb$export$8fc978d97ff76c3)($a291d759013b4698$var$movies);\n        } else alert(`${title} is already in bookmarks`);\n    });\n    return bookmarkBtn;\n};\n\n\nconst $06ed2d1dc0cc9b98$var$apiKey = \"1b4c8d03a375eaff8b7e021ed3e1206c\";\nconst $06ed2d1dc0cc9b98$export$2db9c00c6eb042a8 = async (id)=>{\n    const response = await fetch(`https://api.themoviedb.org/3/movie/${id}/images?api_key=${$06ed2d1dc0cc9b98$var$apiKey}`);\n    const data = await response.json();\n    return data;\n};\n\n\nconst $e3754996af158602$var$movieContainer = document.querySelector(\".movie-container\");\nconst $e3754996af158602$var$wrapper = document.getElementById(\"wrapper\");\nconst $e3754996af158602$export$ce1051fab9369f1e = async (movie)=>{\n    const movieData = movie;\n    const { title: title, popularity: popularity } = movieData;\n    $e3754996af158602$var$movieContainer.replaceChildren();\n    const movieImages = await (0, $06ed2d1dc0cc9b98$export$2db9c00c6eb042a8)(movieData.id);\n    console.log(movieImages);\n    const backgroundImage = movieImages.backdrops.length > 0 ? movieImages.backdrops[0].file_path : movieImages.posters[0].file_path;\n    $e3754996af158602$var$wrapper.style.setProperty(\"--bg-url\", `url(\"https://image.tmdb.org/t/p/original${backgroundImage}\")`);\n    const posterContainer = document.createElement(\"div\");\n    const poster = document.createElement(\"img\");\n    posterContainer.classList.add(\"poster-container\");\n    poster.classList.add(\"poster\");\n    poster.src = `https://image.tmdb.org/t/p/original${movie.poster_path}`;\n    const movieTitle = document.createElement(\"h1\");\n    movieTitle.classList.add(\"movie-title\");\n    movieTitle.textContent = title;\n    const genresContainer = document.createElement(\"div\");\n    genresContainer.classList.add(\"genres-container\");\n    movie.genres.forEach((genre)=>{\n        const genres = document.createElement(\"p\");\n        genres.classList.add(\"genres\");\n        genres.textContent = genre.name;\n        genresContainer.append(genres);\n    });\n    const description = document.createElement(\"p\");\n    const releaseDate = document.createElement(\"p\");\n    const ageRating = document.createElement(\"p\");\n    description.classList.add(\"description\");\n    releaseDate.classList.add(\"release-date\");\n    ageRating.classList.add(\"age-rating\");\n    description.textContent = movie.overview;\n    releaseDate.textContent = movie.release_date;\n    ageRating.textContent = 5; // Need Content Rating API\n    const runTime = document.createElement(\"p\");\n    runTime.classList.add(\"run-time\");\n    runTime.textContent = `Runtime: ${movie.runtime} minutes`;\n    const ratingContainer = document.createElement(\"div\");\n    const ratingStar = document.createElement(\"img\");\n    const rating = document.createElement(\"p\");\n    ratingContainer.classList.add(\"rating-container\");\n    ratingStar.classList.add(\"rating-star\");\n    rating.classList.add(\"rating\");\n    const revenue = document.createElement(\"p\");\n    revenue.classList.add(\"revenue\");\n    revenue.textContent = `$${movie.revenue}`;\n    const homePage = document.createElement(\"a\");\n    homePage.classList.add(\"homepage\");\n    homePage.textContent = `HomePage ${movie.homepage}`;\n    homePage.href = movie.homepage;\n    homePage.target = \"_blank\";\n    $e3754996af158602$var$movieContainer.append(posterContainer, movieTitle, genresContainer, description, releaseDate, ageRating, runTime, ratingContainer, revenue, homePage);\n    $e3754996af158602$var$movieContainer.prepend((0, $a291d759013b4698$export$f5dd83bf25cdebad)(title, popularity));\n    posterContainer.append(poster);\n    ratingContainer.append(ratingStar, rating);\n}; // const crewContainer = document.createElement(\"div\");\n // const crewList = document.createElement(\"ul\");\n // const director = document.createElement(\"li\");\n // const writers = document.createElement(\"li\");\n // const stars = document.createElement(\"li\");\n // crewContainer.classList.add(\"crew-container\");\n // crewList.classList.add(\"crew-list\");\n // director.classList.add(\"director\");\n // writers.classList.add(\"writers\");\n // stars.classList.add(\"stars\");\n // const videosContainer = document.createElement(\"section\");\n // const videosHeading = document.createElement(\"h3\");\n // const video = document.createElement(\"div\");\n // const videoPlayBtn = document.createElement(\"img\");\n // videosContainer.classList.add(\"videos-container\");\n // videosHeading.classList.add(\"videos-heading\");\n // video.classList.add(\"video\");\n // videoPlayBtn.classList.add(\"video-play-button\");\n // const photosContainer = document.createElement(\"section\");\n // const photosTitle = document.createElement(\"h3\");\n // const photo = document.createElement(\"div\");\n // photosContainer.classList.add(\"photos-container\");\n // photosTitle.classList.add(\"photos-title\");\n // photo.classList.add(\"photo\");\n\n\n\n\nconst $e5b32fe6114233ec$var$setSortBy = document.getElementById(\"sort-by\");\nconst $e5b32fe6114233ec$var$minPopSlider = document.getElementById(\"min-popularity\");\nconst $e5b32fe6114233ec$var$minPopValue = document.getElementById(\"min-pop-value\");\n// const filters = getFilters();\n// setSortBy.value = filters.sortType;\nconst $e5b32fe6114233ec$var$filters = (0, $a291d759013b4698$export$1933a9fe712fc1fd)();\n$e5b32fe6114233ec$var$setSortBy.value = $e5b32fe6114233ec$var$filters.sortType || \"\";\n$e5b32fe6114233ec$var$minPopSlider.value = $e5b32fe6114233ec$var$filters.minPopularity || 0;\n$e5b32fe6114233ec$var$minPopValue.textContent = $e5b32fe6114233ec$var$filters.minPopularity || 0;\n$e5b32fe6114233ec$var$setSortBy.addEventListener(\"change\", (e)=>{\n    $e5b32fe6114233ec$var$filters.sortType = e.target.value;\n    (0, $a291d759013b4698$export$9601f9f7dfbe93ec)($e5b32fe6114233ec$var$filters);\n    (0, $6433e638ce53a5fb$export$8fc978d97ff76c3)((0, $a291d759013b4698$export$f1b9a9bec1b8accb)());\n});\nconst $e5b32fe6114233ec$export$736ee37fe3fecc92 = (bookmarks, sortType)=>{\n    return bookmarks.slice().sort((a, b)=>{\n        if (sortType === \"most-popular\") return b.popularity - a.popularity;\n        if (sortType === \"least-popular\") return a.popularity - b.popularity;\n        if (sortType === \"alpha-asc\") return a.title.localeCompare(b.title);\n        if (sortType === \"alpha-desc\") return b.title.localeCompare(a.title);\n        return 0;\n    });\n};\n$e5b32fe6114233ec$var$minPopSlider.addEventListener(\"input\", (e)=>{\n    const value = Number(e.target.value);\n    $e5b32fe6114233ec$var$minPopValue.textContent = value;\n    $e5b32fe6114233ec$var$filters.minPopularity = value;\n    (0, $a291d759013b4698$export$9601f9f7dfbe93ec)($e5b32fe6114233ec$var$filters);\n    (0, $6433e638ce53a5fb$export$8fc978d97ff76c3)((0, $a291d759013b4698$export$f1b9a9bec1b8accb)());\n});\n\n\n\nconst $6433e638ce53a5fb$var$bookmarksList = document.getElementById(\"bookmarks-list\");\nconst $6433e638ce53a5fb$export$224298a172524123 = async (movie)=>{\n    (0, $e3754996af158602$export$ce1051fab9369f1e)(movie);\n};\nconst $6433e638ce53a5fb$export$8fc978d97ff76c3 = (bookmarks)=>{\n    $6433e638ce53a5fb$var$bookmarksList.replaceChildren();\n    const filters = (0, $a291d759013b4698$export$1933a9fe712fc1fd)();\n    const filtered = bookmarks.filter((movie)=>(movie.popularity || 0) >= (filters.minPopularity || 0));\n    const sorted = (0, $e5b32fe6114233ec$export$736ee37fe3fecc92)(filtered, filters.sortType);\n    sorted.forEach((movie)=>{\n        const li = document.createElement(\"li\");\n        li.textContent = movie.title;\n        $6433e638ce53a5fb$var$bookmarksList.append(li);\n    });\n};\n\n\nconst $8595b8fa1656c103$var$apiKey = \"1b4c8d03a375eaff8b7e021ed3e1206c\";\nconst $8595b8fa1656c103$export$a199ce1860fbd5cd = async (id)=>{\n    const response = await fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${$8595b8fa1656c103$var$apiKey}`);\n    const data = await response.json();\n    const results = data;\n    console.log(results);\n    (0, $6433e638ce53a5fb$export$224298a172524123)(results);\n};\n\n\n\nconst $9577a2ae7792ed05$var$apiKey = \"1b4c8d03a375eaff8b7e021ed3e1206c\";\nconst $9577a2ae7792ed05$export$eb208e4123df26c9 = async (title, type)=>{\n    const response = await fetch(`https://api.themoviedb.org/3/search/movie?query=${title}&api_key=${$9577a2ae7792ed05$var$apiKey}`);\n    const data = await response.json();\n    const results = data.results;\n    if (type === \"input\") return results;\n    else (0, $8595b8fa1656c103$export$a199ce1860fbd5cd)(results[0].id);\n}; // searchForm.addEventListener(\"submit\", async (e) => {\n //   e.preventDefault();\n //   const formData = new FormData(searchForm);\n //   let userInput = formData.get(\"search-input\");\n //   if (!userInput) {\n //     return;\n //   }\n //   searchBar.value = \"\";\n //   let findMovie = await fetchSearchMovie(userInput);\n //   renderPage(findMovie);\n //   currentMovieDetails = await fetchMovieDetails(findMovie);\n // });\n\n\nconst $a0babb1dd8900dc9$var$searchForm = document.getElementById(\"nav-search-form\");\nconst $a0babb1dd8900dc9$var$searchBar = document.getElementById(\"search-bar\");\nconst $a0babb1dd8900dc9$var$liveSearchDropdown = document.getElementById(\"live-search-dropdown\");\nvar $3513ab3fdd561f33$exports = {};\n$3513ab3fdd561f33$exports = import.meta.resolve(\"8QvJ8\");\n\n\nconst $a0babb1dd8900dc9$var$imageNotFound = new URL($3513ab3fdd561f33$exports).href;\nconst $a0babb1dd8900dc9$export$642576f8935df945 = $a0babb1dd8900dc9$var$searchForm.addEventListener(\"submit\", async (e)=>{\n    e.preventDefault();\n    $a0babb1dd8900dc9$var$liveSearchDropdown.replaceChildren();\n    const formData = new FormData($a0babb1dd8900dc9$var$searchForm);\n    let userInput = formData.get(\"search-input\");\n    if (!userInput) return;\n    $a0babb1dd8900dc9$var$searchBar.value = \"\";\n    (0, $9577a2ae7792ed05$export$eb208e4123df26c9)(userInput);\n});\nconst $a0babb1dd8900dc9$var$buildLiveSearch = async ()=>{\n    const userInput = $a0babb1dd8900dc9$var$searchBar.value.trim();\n    if (userInput.length === 0) {\n        $a0babb1dd8900dc9$var$liveSearchDropdown.replaceChildren();\n        return;\n    }\n    $a0babb1dd8900dc9$var$liveSearchDropdown.replaceChildren();\n    // console.log(await fetchMovieSearch(userInput, apiKey));\n    const suggestions = await (0, $9577a2ae7792ed05$export$eb208e4123df26c9)(userInput, \"input\");\n    if (!suggestions || suggestions.length === 0) return;\n    for (const movie of suggestions.slice(0, 8)){\n        console.log(movie);\n        let movieId = movie.id;\n        const creditsData = await (0, $8c3623352ddfd687$export$e1749dc656927888)(movieId);\n        const { cast: cast } = creditsData;\n        // Poster, Title, Release Year, 2 actors\n        const suggestedMovie = document.createElement(\"div\");\n        suggestedMovie.classList.add(\"suggested-container\");\n        suggestedMovie.addEventListener(\"click\", async ()=>{\n            $a0babb1dd8900dc9$var$liveSearchDropdown.replaceChildren();\n            (0, $8595b8fa1656c103$export$a199ce1860fbd5cd)(movieId);\n        });\n        const suggestedPosterContainer = document.createElement(\"div\");\n        suggestedPosterContainer.classList.add(\"suggested-poster-container\");\n        const suggestedPoster = document.createElement(\"img\");\n        suggestedPoster.classList.add(movie.poster_path ? \"suggested-poster\" : \"suggested-poster-fallback\");\n        suggestedPoster.src = movie.poster_path ? `https://image.tmdb.org/t/p/original${movie.poster_path}` : $a0babb1dd8900dc9$var$imageNotFound;\n        const suggestedDetails = document.createElement(\"div\");\n        suggestedDetails.classList.add(\"suggested-details-container\");\n        const suggestedTitle = document.createElement(\"p\");\n        suggestedTitle.classList.add(\"suggested-title\");\n        suggestedTitle.textContent = movie.title;\n        const suggestedReleaseYear = document.createElement(\"p\");\n        suggestedReleaseYear.classList.add(\"suggested-info\");\n        suggestedReleaseYear.classList.add(\"suggested-year\");\n        suggestedReleaseYear.textContent = movie.release_date.slice(0, 4);\n        const actorsContainer = document.createElement(\"div\");\n        actorsContainer.classList.add(\"actors-container\");\n        const firstTwoActors = cast.slice(0, 2).map((actor)=>actor.name).join(\", \");\n        const suggestedActors = document.createElement(\"p\");\n        suggestedActors.classList.add(\"suggested-info\");\n        suggestedActors.textContent = firstTwoActors;\n        suggestedMovie.append(suggestedPosterContainer, suggestedDetails);\n        suggestedPosterContainer.append(suggestedPoster);\n        suggestedDetails.append(suggestedTitle, suggestedReleaseYear, actorsContainer);\n        actorsContainer.append(suggestedActors);\n        $a0babb1dd8900dc9$var$liveSearchDropdown.append(suggestedMovie);\n    }\n};\n$a0babb1dd8900dc9$var$searchBar.addEventListener(\"input\", ()=>{\n    $a0babb1dd8900dc9$var$buildLiveSearch();\n});\n$a0babb1dd8900dc9$var$searchBar.addEventListener(\"click\", ()=>{\n    $a0babb1dd8900dc9$var$buildLiveSearch();\n});\nconst $a0babb1dd8900dc9$var$closeLiveSearch = ()=>{\n    $a0babb1dd8900dc9$var$liveSearchDropdown.replaceChildren();\n};\ndocument.addEventListener(\"click\", (e)=>{\n    if (!$a0babb1dd8900dc9$var$liveSearchDropdown.contains(e.target) && e.target !== $a0babb1dd8900dc9$var$searchBar) $a0babb1dd8900dc9$var$closeLiveSearch();\n});\n\n\n\nconst $529cc5610e6f0b96$var$apiKey = \"1b4c8d03a375eaff8b7e021ed3e1206c\";\nconst $529cc5610e6f0b96$export$62462fb8006cb75f = async ()=>{\n    const response = await fetch(`https://api.themoviedb.org/3/movie/popular?language=en-US&page=1&api_key=${$529cc5610e6f0b96$var$apiKey}`);\n    const data = await response.json();\n    const results = data.results[5].id;\n    (0, $8595b8fa1656c103$export$a199ce1860fbd5cd)(results);\n};\n\n\n\n//Event Listeners\n(0, $529cc5610e6f0b96$export$62462fb8006cb75f)();\n(0, $a291d759013b4698$export$f1b9a9bec1b8accb)();\n\n\n//# sourceMappingURL=Movie-Database.ae5daf71.js.map\n","/* Todo\r\n\r\nCreate a data dashboard with data on movies, like IMDb\r\nThings to get from API:\r\nTitle, description, poster, genres, runtime, votes, languages, actors, release date, trailer, images, reviews\r\n\r\nUse methods like:\r\nmap()\r\nfilter()\r\nsort()\r\nreduce()\r\n\r\nDestructuring to get relevant values from objects and arrays\r\n\r\n*/\r\n\r\nimport \"./style.css\";\r\n\r\n// Import modules\r\nimport { handleSearch } from \"./handleSearch.js\";\r\nimport { fetchMoviesPopular } from \"./fetchMoviesPopular.js\";\r\nimport { getBookmarks } from \"./localStorage.js\";\r\n\r\n//Event Listeners\r\n\r\nfetchMoviesPopular();\r\ngetBookmarks();\r\n","import { fetchMovieCredits } from \"./fetchMovieCredits.js\";\r\nimport { fetchMovieDetails } from \"./fetchMovieDetails.js\";\r\nimport { fetchMovieSearch } from \"./fetchMovieSearch.js\";\r\n\r\nconst searchForm = document.getElementById(\"nav-search-form\");\r\nconst searchBar = document.getElementById(\"search-bar\");\r\nconst liveSearchDropdown = document.getElementById(\"live-search-dropdown\");\r\nconst imageNotFound = new URL(\"./public/imagenotfound.jpg\", import.meta.url)\r\n  .href;\r\n\r\nexport const handleSearch = searchForm.addEventListener(\"submit\", async (e) => {\r\n  e.preventDefault();\r\n  liveSearchDropdown.replaceChildren();\r\n\r\n  const formData = new FormData(searchForm);\r\n  let userInput = formData.get(\"search-input\");\r\n  if (!userInput) {\r\n    return;\r\n  }\r\n  searchBar.value = \"\";\r\n  fetchMovieSearch(userInput);\r\n});\r\n\r\nconst buildLiveSearch = async () => {\r\n  const userInput = searchBar.value.trim();\r\n\r\n  if (userInput.length === 0) {\r\n    liveSearchDropdown.replaceChildren();\r\n    return;\r\n  }\r\n\r\n  liveSearchDropdown.replaceChildren();\r\n\r\n  // console.log(await fetchMovieSearch(userInput, apiKey));\r\n\r\n  const suggestions = await fetchMovieSearch(userInput, \"input\");\r\n\r\n  if (!suggestions || suggestions.length === 0) {\r\n    return;\r\n  }\r\n\r\n  for (const movie of suggestions.slice(0, 8)) {\r\n    console.log(movie);\r\n    let movieId = movie.id;\r\n    const creditsData = await fetchMovieCredits(movieId);\r\n    const { cast } = creditsData;\r\n    // Poster, Title, Release Year, 2 actors\r\n    const suggestedMovie = document.createElement(\"div\");\r\n    suggestedMovie.classList.add(\"suggested-container\");\r\n\r\n    suggestedMovie.addEventListener(\"click\", async () => {\r\n      liveSearchDropdown.replaceChildren();\r\n      fetchMovieDetails(movieId);\r\n    });\r\n\r\n    const suggestedPosterContainer = document.createElement(\"div\");\r\n    suggestedPosterContainer.classList.add(\"suggested-poster-container\");\r\n\r\n    const suggestedPoster = document.createElement(\"img\");\r\n    suggestedPoster.classList.add(\r\n      movie.poster_path ? \"suggested-poster\" : \"suggested-poster-fallback\"\r\n    );\r\n    suggestedPoster.src = movie.poster_path\r\n      ? `https://image.tmdb.org/t/p/original${movie.poster_path}`\r\n      : imageNotFound;\r\n\r\n    const suggestedDetails = document.createElement(\"div\");\r\n    suggestedDetails.classList.add(\"suggested-details-container\");\r\n\r\n    const suggestedTitle = document.createElement(\"p\");\r\n    suggestedTitle.classList.add(\"suggested-title\");\r\n    suggestedTitle.textContent = movie.title;\r\n\r\n    const suggestedReleaseYear = document.createElement(\"p\");\r\n    suggestedReleaseYear.classList.add(\"suggested-info\");\r\n    suggestedReleaseYear.classList.add(\"suggested-year\");\r\n    suggestedReleaseYear.textContent = movie.release_date.slice(0, 4);\r\n\r\n    const actorsContainer = document.createElement(\"div\");\r\n    actorsContainer.classList.add(\"actors-container\");\r\n\r\n    const firstTwoActors = cast\r\n      .slice(0, 2)\r\n      .map((actor) => actor.name)\r\n      .join(\", \");\r\n\r\n    const suggestedActors = document.createElement(\"p\");\r\n    suggestedActors.classList.add(\"suggested-info\");\r\n    suggestedActors.textContent = firstTwoActors;\r\n\r\n    suggestedMovie.append(suggestedPosterContainer, suggestedDetails);\r\n    suggestedPosterContainer.append(suggestedPoster);\r\n    suggestedDetails.append(\r\n      suggestedTitle,\r\n      suggestedReleaseYear,\r\n      actorsContainer\r\n    );\r\n    actorsContainer.append(suggestedActors);\r\n\r\n    liveSearchDropdown.append(suggestedMovie);\r\n  }\r\n};\r\n\r\nsearchBar.addEventListener(\"input\", () => {\r\n  buildLiveSearch();\r\n});\r\n\r\nsearchBar.addEventListener(\"click\", () => {\r\n  buildLiveSearch();\r\n});\r\n\r\nconst closeLiveSearch = () => {\r\n  liveSearchDropdown.replaceChildren();\r\n};\r\n\r\ndocument.addEventListener(\"click\", (e) => {\r\n  if (!liveSearchDropdown.contains(e.target) && e.target !== searchBar) {\r\n    closeLiveSearch();\r\n  }\r\n});\r\n","const apiKey = process.env.API_KEY;\r\n\r\nexport const fetchMovieCredits = async (id) => {\r\n  const response = await fetch(\r\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${apiKey}`\r\n  );\r\n  const data = await response.json();\r\n  return data;\r\n};\r\n","import { renderPage } from \"./render.js\";\r\n\r\nconst apiKey = process.env.API_KEY;\r\n\r\nexport const fetchMovieDetails = async (id) => {\r\n  const response = await fetch(\r\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}`\r\n  );\r\n  const data = await response.json();\r\n  const results = data;\r\n  console.log(results);\r\n  renderPage(results);\r\n};\r\n","import { buildPage } from \"./buildPage.js\";\r\nimport { sortBookmarks } from \"./filter.js\";\r\nimport { getFilters } from \"./localStorage.js\";\r\n\r\nconst bookmarksList = document.getElementById(\"bookmarks-list\");\r\n\r\nexport const renderPage = async (movie) => {\r\n  buildPage(movie);\r\n};\r\n\r\nexport const renderBookmarks = (bookmarks) => {\r\n  bookmarksList.replaceChildren();\r\n  const filters = getFilters();\r\n\r\n  const filtered = bookmarks.filter(\r\n    (movie) => (movie.popularity || 0) >= (filters.minPopularity || 0)\r\n  );\r\n  const sorted = sortBookmarks(filtered, filters.sortType);\r\n\r\n  sorted.forEach((movie) => {\r\n    const li = document.createElement(\"li\");\r\n    li.textContent = movie.title;\r\n    bookmarksList.append(li);\r\n  });\r\n};\r\n","import { bookmarkButton } from \"./localStorage.js\";\r\nimport { fetchMovieImages } from \"./fetchMovieImages.js\";\r\n\r\nconst movieContainer = document.querySelector(\".movie-container\");\r\nconst wrapper = document.getElementById(\"wrapper\");\r\n\r\nexport const buildPage = async (movie) => {\r\n  const movieData = movie;\r\n  const { title, popularity } = movieData;\r\n  movieContainer.replaceChildren();\r\n\r\n  const movieImages = await fetchMovieImages(movieData.id);\r\n  console.log(movieImages);\r\n  const backgroundImage =\r\n    movieImages.backdrops.length > 0\r\n      ? movieImages.backdrops[0].file_path\r\n      : movieImages.posters[0].file_path;\r\n  wrapper.style.setProperty(\r\n    \"--bg-url\",\r\n    `url(\"https://image.tmdb.org/t/p/original${backgroundImage}\")`\r\n  );\r\n\r\n  const posterContainer = document.createElement(\"div\");\r\n  const poster = document.createElement(\"img\");\r\n  posterContainer.classList.add(\"poster-container\");\r\n  poster.classList.add(\"poster\");\r\n  poster.src = `https://image.tmdb.org/t/p/original${movie.poster_path}`;\r\n\r\n  const movieTitle = document.createElement(\"h1\");\r\n  movieTitle.classList.add(\"movie-title\");\r\n  movieTitle.textContent = title;\r\n\r\n  const genresContainer = document.createElement(\"div\");\r\n  genresContainer.classList.add(\"genres-container\");\r\n  movie.genres.forEach((genre) => {\r\n    const genres = document.createElement(\"p\");\r\n    genres.classList.add(\"genres\");\r\n    genres.textContent = genre.name;\r\n    genresContainer.append(genres);\r\n  });\r\n\r\n  const description = document.createElement(\"p\");\r\n  const releaseDate = document.createElement(\"p\");\r\n  const ageRating = document.createElement(\"p\");\r\n  description.classList.add(\"description\");\r\n  releaseDate.classList.add(\"release-date\");\r\n  ageRating.classList.add(\"age-rating\");\r\n  description.textContent = movie.overview;\r\n  releaseDate.textContent = movie.release_date;\r\n  ageRating.textContent = 5; // Need Content Rating API\r\n\r\n  const runTime = document.createElement(\"p\");\r\n  runTime.classList.add(\"run-time\");\r\n  runTime.textContent = `Runtime: ${movie.runtime} minutes`;\r\n\r\n  const ratingContainer = document.createElement(\"div\");\r\n  const ratingStar = document.createElement(\"img\");\r\n  const rating = document.createElement(\"p\");\r\n  ratingContainer.classList.add(\"rating-container\");\r\n  ratingStar.classList.add(\"rating-star\");\r\n  rating.classList.add(\"rating\");\r\n\r\n  const revenue = document.createElement(\"p\");\r\n  revenue.classList.add(\"revenue\");\r\n  revenue.textContent = `$${movie.revenue}`;\r\n\r\n  const homePage = document.createElement(\"a\");\r\n  homePage.classList.add(\"homepage\");\r\n  homePage.textContent = `HomePage ${movie.homepage}`;\r\n  homePage.href = movie.homepage;\r\n  homePage.target = \"_blank\";\r\n\r\n  movieContainer.append(\r\n    posterContainer,\r\n    movieTitle,\r\n    genresContainer,\r\n    description,\r\n    releaseDate,\r\n    ageRating,\r\n    runTime,\r\n    ratingContainer,\r\n    revenue,\r\n    homePage\r\n  );\r\n  movieContainer.prepend(bookmarkButton(title, popularity));\r\n  posterContainer.append(poster);\r\n  ratingContainer.append(ratingStar, rating);\r\n};\r\n\r\n// const crewContainer = document.createElement(\"div\");\r\n// const crewList = document.createElement(\"ul\");\r\n// const director = document.createElement(\"li\");\r\n// const writers = document.createElement(\"li\");\r\n// const stars = document.createElement(\"li\");\r\n// crewContainer.classList.add(\"crew-container\");\r\n// crewList.classList.add(\"crew-list\");\r\n// director.classList.add(\"director\");\r\n// writers.classList.add(\"writers\");\r\n// stars.classList.add(\"stars\");\r\n\r\n// const videosContainer = document.createElement(\"section\");\r\n// const videosHeading = document.createElement(\"h3\");\r\n// const video = document.createElement(\"div\");\r\n// const videoPlayBtn = document.createElement(\"img\");\r\n// videosContainer.classList.add(\"videos-container\");\r\n// videosHeading.classList.add(\"videos-heading\");\r\n// video.classList.add(\"video\");\r\n// videoPlayBtn.classList.add(\"video-play-button\");\r\n\r\n// const photosContainer = document.createElement(\"section\");\r\n// const photosTitle = document.createElement(\"h3\");\r\n// const photo = document.createElement(\"div\");\r\n// photosContainer.classList.add(\"photos-container\");\r\n// photosTitle.classList.add(\"photos-title\");\r\n// photo.classList.add(\"photo\");\r\n","import { renderBookmarks } from \"./render.js\";\r\n\r\nconst deleteBookmarksBtn = document.getElementById(\"delete-bookmarks\");\r\n\r\nlet movies = [];\r\n\r\ndeleteBookmarksBtn.addEventListener(\"click\", () => {\r\n  movies = [];\r\n  localStorage.setItem(\"movies\", JSON.stringify(movies));\r\n  renderBookmarks(movies);\r\n});\r\n\r\nexport const saveBookmarks = () => {\r\n  localStorage.setItem(\"movies\", JSON.stringify(movies));\r\n};\r\n\r\nexport const getBookmarks = () => {\r\n  const bookmarkedMovies = localStorage.getItem(\"movies\");\r\n  if (bookmarkedMovies) {\r\n    movies = JSON.parse(bookmarkedMovies);\r\n    renderBookmarks(movies);\r\n  }\r\n  return movies;\r\n};\r\n\r\nexport const saveFilters = (filters) =>\r\n  localStorage.setItem(\"filters\", JSON.stringify(filters));\r\n\r\nexport const getFilters = () =>\r\n  JSON.parse(localStorage.getItem(\"filters\")) || { sortType: \"\" };\r\n\r\nexport const bookmarkButton = (title, popularity) => {\r\n  const bookmarkBtn = document.createElement(\"button\");\r\n  bookmarkBtn.classList.add(\"bookmark-button\");\r\n  bookmarkBtn.textContent = \"Favorite\";\r\n\r\n  bookmarkBtn.addEventListener(\"click\", () => {\r\n    const movieObj = { title, popularity };\r\n    const alreadyBookmarked = movies.some((m) => m.title === movieObj.title);\r\n    if (!alreadyBookmarked) {\r\n      console.log(movieObj);\r\n      movies.push(movieObj);\r\n      saveBookmarks();\r\n      renderBookmarks(movies);\r\n    } else {\r\n      alert(`${title} is already in bookmarks`);\r\n    }\r\n  });\r\n\r\n  return bookmarkBtn;\r\n};\r\n","const apiKey = process.env.API_KEY;\r\n\r\nexport const fetchMovieImages = async (id) => {\r\n  const response = await fetch(\r\n    `https://api.themoviedb.org/3/movie/${id}/images?api_key=${apiKey}`\r\n  );\r\n  const data = await response.json();\r\n  return data;\r\n};\r\n","import { getFilters, saveFilters, getBookmarks } from \"./localStorage.js\";\r\nimport { renderBookmarks } from \"./render.js\";\r\n\r\nconst setSortBy = document.getElementById(\"sort-by\");\r\n\r\nconst minPopSlider = document.getElementById(\"min-popularity\");\r\nconst minPopValue = document.getElementById(\"min-pop-value\");\r\n\r\n// const filters = getFilters();\r\n// setSortBy.value = filters.sortType;\r\n\r\nconst filters = getFilters();\r\nsetSortBy.value = filters.sortType || \"\";\r\nminPopSlider.value = filters.minPopularity || 0;\r\nminPopValue.textContent = filters.minPopularity || 0;\r\n\r\nsetSortBy.addEventListener(\"change\", (e) => {\r\n  filters.sortType = e.target.value;\r\n  saveFilters(filters);\r\n  renderBookmarks(getBookmarks());\r\n});\r\n\r\nexport const sortBookmarks = (bookmarks, sortType) => {\r\n  return bookmarks.slice().sort((a, b) => {\r\n    if (sortType === \"most-popular\") return b.popularity - a.popularity;\r\n    if (sortType === \"least-popular\") return a.popularity - b.popularity;\r\n    if (sortType === \"alpha-asc\") return a.title.localeCompare(b.title);\r\n    if (sortType === \"alpha-desc\") return b.title.localeCompare(a.title);\r\n    return 0;\r\n  });\r\n};\r\n\r\nminPopSlider.addEventListener(\"input\", (e) => {\r\n  const value = Number(e.target.value);\r\n  minPopValue.textContent = value;\r\n  filters.minPopularity = value;\r\n  saveFilters(filters);\r\n  renderBookmarks(getBookmarks());\r\n});\r\n","import { fetchMovieDetails } from \"./fetchMovieDetails.js\";\r\n\r\nconst apiKey = process.env.API_KEY;\r\n\r\nexport const fetchMovieSearch = async (title, type) => {\r\n  const response = await fetch(\r\n    `https://api.themoviedb.org/3/search/movie?query=${title}&api_key=${apiKey}`\r\n  );\r\n  const data = await response.json();\r\n  const results = data.results;\r\n\r\n  if (type === \"input\") {\r\n    return results;\r\n  } else {\r\n    fetchMovieDetails(results[0].id);\r\n  }\r\n};\r\n\r\n// searchForm.addEventListener(\"submit\", async (e) => {\r\n//   e.preventDefault();\r\n\r\n//   const formData = new FormData(searchForm);\r\n//   let userInput = formData.get(\"search-input\");\r\n//   if (!userInput) {\r\n//     return;\r\n//   }\r\n//   searchBar.value = \"\";\r\n//   let findMovie = await fetchSearchMovie(userInput);\r\n//   renderPage(findMovie);\r\n//   currentMovieDetails = await fetchMovieDetails(findMovie);\r\n// });\r\n","module.exports = __parcel__import__.meta.resolve(\"8QvJ8\");","import { fetchMovieDetails } from \"./fetchMovieDetails.js\";\r\n\r\nconst apiKey = process.env.API_KEY;\r\n\r\nexport const fetchMoviesPopular = async () => {\r\n  const response = await fetch(\r\n    `https://api.themoviedb.org/3/movie/popular?language=en-US&page=1&api_key=${apiKey}`\r\n  );\r\n  const data = await response.json();\r\n  const results = data.results[5].id;\r\n  fetchMovieDetails(results);\r\n};\r\n"],"names":["$8c3623352ddfd687$export$e1749dc656927888","id","response","fetch","json","$a291d759013b4698$var$deleteBookmarksBtn","document","getElementById","$a291d759013b4698$var$movies","addEventListener","localStorage","setItem","JSON","stringify","$6433e638ce53a5fb$export$8fc978d97ff76c3","$a291d759013b4698$export$f1b9a9bec1b8accb","bookmarkedMovies","getItem","parse","$a291d759013b4698$export$9601f9f7dfbe93ec","filters","$a291d759013b4698$export$1933a9fe712fc1fd","sortType","$06ed2d1dc0cc9b98$export$2db9c00c6eb042a8","$e3754996af158602$var$movieContainer","querySelector","$e3754996af158602$var$wrapper","$e3754996af158602$export$ce1051fab9369f1e","movie","title","popularity","replaceChildren","movieImages","movieData","console","log","backgroundImage","backdrops","length","file_path","posters","style","setProperty","posterContainer","createElement","poster","classList","add","src","poster_path","movieTitle","textContent","genresContainer","genres","forEach","genre","name","append","description","releaseDate","ageRating","overview","release_date","runTime","runtime","ratingContainer","ratingStar","rating","revenue","homePage","homepage","href","target","prepend","bookmarkBtn","movieObj","some","m","alert","push","$e5b32fe6114233ec$var$setSortBy","$e5b32fe6114233ec$var$minPopSlider","$e5b32fe6114233ec$var$minPopValue","$e5b32fe6114233ec$var$filters","value","minPopularity","e","Number","$6433e638ce53a5fb$var$bookmarksList","$6433e638ce53a5fb$export$224298a172524123","bookmarks","sorted","filter","slice","sort","a","b","localeCompare","li","$8595b8fa1656c103$export$a199ce1860fbd5cd","data","$9577a2ae7792ed05$export$eb208e4123df26c9","type","results","$a0babb1dd8900dc9$var$searchForm","$a0babb1dd8900dc9$var$searchBar","$a0babb1dd8900dc9$var$liveSearchDropdown","$a0babb1dd8900dc9$var$imageNotFound","URL","resolve","preventDefault","userInput","formData","FormData","get","$a0babb1dd8900dc9$var$buildLiveSearch","trim","suggestions","movieId","cast","suggestedMovie","suggestedPosterContainer","suggestedPoster","suggestedDetails","suggestedTitle","suggestedReleaseYear","actorsContainer","firstTwoActors","map","actor","join","suggestedActors","contains"],"version":3,"file":"Movie-Database.ae5daf71.js.map"}