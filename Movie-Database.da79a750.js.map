{"mappings":"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","sources":["<anon>","src/app.js","src/fetchMovieSearch.js","src/fetchMovieDetails.js","src/render.js","src/buildPage.js","src/localStorage.js","src/filter.js","src/fetchMoviesPopular.js"],"sourcesContent":["/* Todo\r\n\r\nCreate a data dashboard with data on movies, like IMDb\r\nThings to get from API:\r\nTitle, description, poster, genres, runtime, votes, languages, actors, release date, trailer, images, reviews\r\n\r\nUse methods like:\r\nmap()\r\nfilter()\r\nsort()\r\nreduce()\r\n\r\nDestructuring to get relevant values from objects and arrays\r\n\r\n*/ \n\nlet $a291d759013b4698$var$movies = [];\nconst $a291d759013b4698$export$7c6b17cf45d2b7e3 = ()=>{\n    localStorage.setItem(\"movies\", JSON.stringify($a291d759013b4698$var$movies));\n};\nconst $a291d759013b4698$export$f1b9a9bec1b8accb = ()=>{\n    const bookmarkedMovies = localStorage.getItem(\"movies\");\n    if (bookmarkedMovies) {\n        $a291d759013b4698$var$movies = JSON.parse(bookmarkedMovies);\n        (0, $6433e638ce53a5fb$export$8fc978d97ff76c3)($a291d759013b4698$var$movies);\n    }\n    return $a291d759013b4698$var$movies;\n};\nconst $a291d759013b4698$export$9601f9f7dfbe93ec = (filters)=>localStorage.setItem(\"filters\", JSON.stringify(filters));\nconst $a291d759013b4698$export$1933a9fe712fc1fd = ()=>JSON.parse(localStorage.getItem(\"filters\")) || {\n        sortType: \"\"\n    };\nconst $a291d759013b4698$export$f5dd83bf25cdebad = (title, popularity)=>{\n    const bookmarkBtn = document.createElement(\"button\");\n    bookmarkBtn.classList.add(\"bookmark-button\");\n    bookmarkBtn.textContent = \"Bookmark\";\n    bookmarkBtn.addEventListener(\"click\", ()=>{\n        const movieObj = {\n            title: title,\n            popularity: popularity\n        };\n        const alreadyBookmarked = $a291d759013b4698$var$movies.some((m)=>m.title === movieObj.title);\n        if (!alreadyBookmarked) {\n            console.log(movieObj);\n            $a291d759013b4698$var$movies.push(movieObj);\n            $a291d759013b4698$export$7c6b17cf45d2b7e3();\n            (0, $6433e638ce53a5fb$export$8fc978d97ff76c3)($a291d759013b4698$var$movies);\n        } else alert(`${title} is already in bookmarks`);\n    });\n    return bookmarkBtn;\n};\n\n\nconst $e3754996af158602$var$movieContainer = document.querySelector(\".movie-container\");\nconst $e3754996af158602$export$ce1051fab9369f1e = async (movie)=>{\n    const movieData = movie;\n    const { title: title, popularity: popularity } = movieData;\n    console.log(title, popularity);\n    $e3754996af158602$var$movieContainer.replaceChildren();\n    const posterContainer = document.createElement(\"div\");\n    const poster = document.createElement(\"img\");\n    posterContainer.classList.add(\"poster-container\");\n    poster.classList.add(\"poster\");\n    poster.src = `https://image.tmdb.org/t/p/original${movie.poster_path}`;\n    const movieTitle = document.createElement(\"h1\");\n    movieTitle.classList.add(\"movie-title\");\n    movieTitle.textContent = movie.title;\n    const genresContainer = document.createElement(\"div\");\n    genresContainer.classList.add(\"genres-container\");\n    movie.genres.forEach((genre)=>{\n        const genres = document.createElement(\"p\");\n        genres.classList.add(\"genres\");\n        genres.textContent = genre.name;\n        genresContainer.append(genres);\n    });\n    const description = document.createElement(\"p\");\n    const releaseDate = document.createElement(\"p\");\n    const ageRating = document.createElement(\"p\");\n    description.classList.add(\"description\");\n    releaseDate.classList.add(\"release-date\");\n    ageRating.classList.add(\"age-rating\");\n    description.textContent = movie.overview;\n    releaseDate.textContent = movie.release_date;\n    ageRating.textContent = 5; // Need Content Rating API\n    const runTime = document.createElement(\"p\");\n    runTime.classList.add(\"run-time\");\n    runTime.textContent = `Runtime: ${movie.runtime} minutes`;\n    const ratingContainer = document.createElement(\"div\");\n    const ratingStar = document.createElement(\"img\");\n    const rating = document.createElement(\"p\");\n    ratingContainer.classList.add(\"rating-container\");\n    ratingStar.classList.add(\"rating-star\");\n    rating.classList.add(\"rating\");\n    const revenue = document.createElement(\"p\");\n    revenue.classList.add(\"revenue\");\n    revenue.textContent = `$${movie.revenue}`;\n    const homePage = document.createElement(\"a\");\n    homePage.classList.add(\"homepage\");\n    homePage.textContent = `HomePage ${movie.homepage}`;\n    homePage.href = movie.homepage;\n    homePage.target = \"_blank\";\n    $e3754996af158602$var$movieContainer.append(posterContainer, title, genresContainer, description, releaseDate, ageRating, runTime, ratingContainer, revenue, homePage);\n    $e3754996af158602$var$movieContainer.prepend((0, $a291d759013b4698$export$f5dd83bf25cdebad)(title, popularity));\n    posterContainer.append(poster);\n    ratingContainer.append(ratingStar, rating);\n}; // const crewContainer = document.createElement(\"div\");\n // const crewList = document.createElement(\"ul\");\n // const director = document.createElement(\"li\");\n // const writers = document.createElement(\"li\");\n // const stars = document.createElement(\"li\");\n // crewContainer.classList.add(\"crew-container\");\n // crewList.classList.add(\"crew-list\");\n // director.classList.add(\"director\");\n // writers.classList.add(\"writers\");\n // stars.classList.add(\"stars\");\n // const videosContainer = document.createElement(\"section\");\n // const videosHeading = document.createElement(\"h3\");\n // const video = document.createElement(\"div\");\n // const videoPlayBtn = document.createElement(\"img\");\n // videosContainer.classList.add(\"videos-container\");\n // videosHeading.classList.add(\"videos-heading\");\n // video.classList.add(\"video\");\n // videoPlayBtn.classList.add(\"video-play-button\");\n // const photosContainer = document.createElement(\"section\");\n // const photosTitle = document.createElement(\"h3\");\n // const photo = document.createElement(\"div\");\n // photosContainer.classList.add(\"photos-container\");\n // photosTitle.classList.add(\"photos-title\");\n // photo.classList.add(\"photo\");\n\n\n\n\nconst $e5b32fe6114233ec$var$setSortBy = document.getElementById(\"sort-by\");\nconst $e5b32fe6114233ec$var$filters = (0, $a291d759013b4698$export$1933a9fe712fc1fd)();\n$e5b32fe6114233ec$var$setSortBy.value = $e5b32fe6114233ec$var$filters.sortType;\n$e5b32fe6114233ec$var$setSortBy.addEventListener(\"change\", (e)=>{\n    $e5b32fe6114233ec$var$filters.sortType = e.target.value;\n    (0, $a291d759013b4698$export$9601f9f7dfbe93ec)($e5b32fe6114233ec$var$filters);\n    const bookmarks = (0, $a291d759013b4698$export$f1b9a9bec1b8accb)();\n    (0, $6433e638ce53a5fb$export$8fc978d97ff76c3)(bookmarks);\n});\nconst $e5b32fe6114233ec$export$736ee37fe3fecc92 = (bookmarks, sortType)=>{\n    return bookmarks.slice().sort((a, b)=>{\n        if (sortType === \"most-popular\") return b.popularity - a.popularity;\n        if (sortType === \"least-popular\") return a.popularity - b.popularity;\n        if (sortType === \"alpha-asc\") return a.title.localeCompare(b.title);\n        if (sortType === \"alpha-desc\") return b.title.localeCompare(a.title);\n        return 0;\n    });\n};\n\n\n\nconst $6433e638ce53a5fb$var$bookmarksList = document.getElementById(\"bookmarks-list\");\nconst $6433e638ce53a5fb$export$224298a172524123 = async (movie)=>{\n    (0, $e3754996af158602$export$ce1051fab9369f1e)(movie);\n};\nconst $6433e638ce53a5fb$export$8fc978d97ff76c3 = (bookmarks)=>{\n    $6433e638ce53a5fb$var$bookmarksList.replaceChildren();\n    const filters = (0, $a291d759013b4698$export$1933a9fe712fc1fd)();\n    const sorted = (0, $e5b32fe6114233ec$export$736ee37fe3fecc92)(bookmarks, filters.sortType);\n    sorted.forEach((movie)=>{\n        const li = document.createElement(\"li\");\n        li.textContent = movie.title;\n        $6433e638ce53a5fb$var$bookmarksList.append(li);\n    });\n};\n\n\nconst $8595b8fa1656c103$export$a199ce1860fbd5cd = async (id, apiKey)=>{\n    const response = await fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}`);\n    const data = await response.json();\n    const results = data;\n    (0, $6433e638ce53a5fb$export$224298a172524123)(results);\n};\n\n\n\nconst $9577a2ae7792ed05$var$searchForm = document.getElementById(\"nav-search-form\");\nconst $9577a2ae7792ed05$var$searchBar = document.getElementById(\"search-bar\");\nconst $9577a2ae7792ed05$var$liveSearchDropdown = document.getElementById(\"live-search-dropdown\");\nconst $9577a2ae7792ed05$var$apiKey = \"1b4c8d03a375eaff8b7e021ed3e1206c\";\nconst $9577a2ae7792ed05$export$eb208e4123df26c9 = async (title, apiKey)=>{\n    const response = await fetch(`https://api.themoviedb.org/3/search/movie?query=${title}&api_key=${apiKey}`);\n    const data = await response.json();\n    const results = data.results[0].id;\n    (0, $8595b8fa1656c103$export$a199ce1860fbd5cd)(results, apiKey);\n};\nconst $9577a2ae7792ed05$export$642576f8935df945 = $9577a2ae7792ed05$var$searchForm.addEventListener(\"submit\", async (e)=>{\n    e.preventDefault();\n    const formData = new FormData($9577a2ae7792ed05$var$searchForm);\n    let userInput = formData.get(\"search-input\");\n    if (!userInput) return;\n    $9577a2ae7792ed05$var$searchBar.value = \"\";\n    $9577a2ae7792ed05$export$eb208e4123df26c9(userInput, $9577a2ae7792ed05$var$apiKey);\n}); // searchForm.addEventListener(\"submit\", async (e) => {\n //   e.preventDefault();\n //   const formData = new FormData(searchForm);\n //   let userInput = formData.get(\"search-input\");\n //   if (!userInput) {\n //     return;\n //   }\n //   searchBar.value = \"\";\n //   let findMovie = await fetchSearchMovie(userInput);\n //   renderPage(findMovie);\n //   currentMovieDetails = await fetchMovieDetails(findMovie);\n // });\n // searchBar.addEventListener(\"input\", async () => {\n //   const query = searchBar.value;\n //   if (query.length < 2) {\n //     liveSearchDropdown.style.display = \"none\";\n //     return;\n //   }\n //   const suggestions = await fetchSearchMovie(currentMovieId);\n //   suggestions.forEach((movie) => {\n //     // Poster, Title, Release Year, 2 actors\n //     const suggestedMovie = createElement(\"div\");\n //     const posterContainer = createElement(\"div\");\n //     const suggestedMoviePoster = createElement(\"img\");\n //     suggestedMoviePoster.classList.add(\"suggested-movie-poster\");\n //     suggestedMoviePoster.src = movie.poster_path;\n //     suggestedMovie.append(suggestedMoviePoster);\n //     liveSearchDropdown.append(suggestedMovie);\n //   });\n // });\n\n\n\nconst $529cc5610e6f0b96$export$62462fb8006cb75f = async (apiKey)=>{\n    const response = await fetch(`https://api.themoviedb.org/3/movie/popular?language=en-US&page=1&api_key=${apiKey}`);\n    const data = await response.json();\n    const results = data.results[0].id;\n    (0, $8595b8fa1656c103$export$a199ce1860fbd5cd)(results, apiKey);\n};\n\n\n\nconst $e73bf42412feb220$var$apiKey = \"1b4c8d03a375eaff8b7e021ed3e1206c\";\n//Event Listeners\n(0, $529cc5610e6f0b96$export$62462fb8006cb75f)($e73bf42412feb220$var$apiKey);\n(0, $a291d759013b4698$export$f1b9a9bec1b8accb)();\n\n\n//# sourceMappingURL=Movie-Database.da79a750.js.map\n","/* Todo\r\n\r\nCreate a data dashboard with data on movies, like IMDb\r\nThings to get from API:\r\nTitle, description, poster, genres, runtime, votes, languages, actors, release date, trailer, images, reviews\r\n\r\nUse methods like:\r\nmap()\r\nfilter()\r\nsort()\r\nreduce()\r\n\r\nDestructuring to get relevant values from objects and arrays\r\n\r\n*/\r\n\r\nimport \"./style.css\";\r\n\r\nconst apiKey = process.env.API_KEY;\r\n\r\n// Import modules\r\nimport \"./fetchMovieSearch.js\";\r\nimport { fetchMoviesPopular } from \"./fetchMoviesPopular.js\";\r\nimport { getBookmarks } from \"./localStorage.js\";\r\n\r\n//Event Listeners\r\n\r\nfetchMoviesPopular(apiKey);\r\ngetBookmarks();\r\n","import { fetchMovieDetails } from \"./fetchMovieDetails.js\";\r\nimport { renderPage } from \"./render.js\";\r\n\r\nconst searchForm = document.getElementById(\"nav-search-form\");\r\nconst searchBar = document.getElementById(\"search-bar\");\r\nconst liveSearchDropdown = document.getElementById(\"live-search-dropdown\");\r\n\r\nconst apiKey = process.env.API_KEY;\r\n\r\nexport const fetchMovieSearch = async (title, apiKey) => {\r\n  const response = await fetch(\r\n    `https://api.themoviedb.org/3/search/movie?query=${title}&api_key=${apiKey}`\r\n  );\r\n  const data = await response.json();\r\n  const results = data.results[0].id;\r\n  fetchMovieDetails(results, apiKey);\r\n};\r\n\r\nexport const handleSearch = searchForm.addEventListener(\"submit\", async (e) => {\r\n  e.preventDefault();\r\n\r\n  const formData = new FormData(searchForm);\r\n  let userInput = formData.get(\"search-input\");\r\n  if (!userInput) {\r\n    return;\r\n  }\r\n  searchBar.value = \"\";\r\n  fetchMovieSearch(userInput, apiKey);\r\n});\r\n\r\n// searchForm.addEventListener(\"submit\", async (e) => {\r\n//   e.preventDefault();\r\n\r\n//   const formData = new FormData(searchForm);\r\n//   let userInput = formData.get(\"search-input\");\r\n//   if (!userInput) {\r\n//     return;\r\n//   }\r\n//   searchBar.value = \"\";\r\n//   let findMovie = await fetchSearchMovie(userInput);\r\n//   renderPage(findMovie);\r\n//   currentMovieDetails = await fetchMovieDetails(findMovie);\r\n// });\r\n\r\n// searchBar.addEventListener(\"input\", async () => {\r\n//   const query = searchBar.value;\r\n\r\n//   if (query.length < 2) {\r\n//     liveSearchDropdown.style.display = \"none\";\r\n//     return;\r\n//   }\r\n//   const suggestions = await fetchSearchMovie(currentMovieId);\r\n\r\n//   suggestions.forEach((movie) => {\r\n//     // Poster, Title, Release Year, 2 actors\r\n//     const suggestedMovie = createElement(\"div\");\r\n//     const posterContainer = createElement(\"div\");\r\n//     const suggestedMoviePoster = createElement(\"img\");\r\n//     suggestedMoviePoster.classList.add(\"suggested-movie-poster\");\r\n//     suggestedMoviePoster.src = movie.poster_path;\r\n//     suggestedMovie.append(suggestedMoviePoster);\r\n//     liveSearchDropdown.append(suggestedMovie);\r\n//   });\r\n// });\r\n","import { renderPage } from \"./render.js\";\r\n\r\nexport const fetchMovieDetails = async (id, apiKey) => {\r\n  const response = await fetch(\r\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}`\r\n  );\r\n  const data = await response.json();\r\n  const results = data;\r\n  renderPage(results);\r\n};\r\n","import { buildPage } from \"./buildPage.js\";\r\nimport { sortBookmarks } from \"./filter.js\";\r\nimport { getFilters } from \"./localStorage.js\";\r\n\r\nconst bookmarksList = document.getElementById(\"bookmarks-list\");\r\n\r\nexport const renderPage = async (movie) => {\r\n  buildPage(movie);\r\n};\r\n\r\nexport const renderBookmarks = (bookmarks) => {\r\n  bookmarksList.replaceChildren();\r\n  const filters = getFilters();\r\n  const sorted = sortBookmarks(bookmarks, filters.sortType);\r\n  sorted.forEach((movie) => {\r\n    const li = document.createElement(\"li\");\r\n    li.textContent = movie.title;\r\n    bookmarksList.append(li);\r\n  });\r\n};\r\n","import { bookmarkButton } from \"./localStorage.js\";\r\n\r\nconst movieContainer = document.querySelector(\".movie-container\");\r\n\r\nexport const buildPage = async (movie) => {\r\n  const movieData = movie;\r\n  const { title, popularity } = movieData;\r\n  console.log(title, popularity);\r\n  movieContainer.replaceChildren();\r\n  const posterContainer = document.createElement(\"div\");\r\n  const poster = document.createElement(\"img\");\r\n  posterContainer.classList.add(\"poster-container\");\r\n  poster.classList.add(\"poster\");\r\n  poster.src = `https://image.tmdb.org/t/p/original${movie.poster_path}`;\r\n\r\n  const movieTitle = document.createElement(\"h1\");\r\n  movieTitle.classList.add(\"movie-title\");\r\n  movieTitle.textContent = movie.title;\r\n\r\n  const genresContainer = document.createElement(\"div\");\r\n  genresContainer.classList.add(\"genres-container\");\r\n  movie.genres.forEach((genre) => {\r\n    const genres = document.createElement(\"p\");\r\n    genres.classList.add(\"genres\");\r\n    genres.textContent = genre.name;\r\n    genresContainer.append(genres);\r\n  });\r\n\r\n  const description = document.createElement(\"p\");\r\n  const releaseDate = document.createElement(\"p\");\r\n  const ageRating = document.createElement(\"p\");\r\n  description.classList.add(\"description\");\r\n  releaseDate.classList.add(\"release-date\");\r\n  ageRating.classList.add(\"age-rating\");\r\n  description.textContent = movie.overview;\r\n  releaseDate.textContent = movie.release_date;\r\n  ageRating.textContent = 5; // Need Content Rating API\r\n\r\n  const runTime = document.createElement(\"p\");\r\n  runTime.classList.add(\"run-time\");\r\n  runTime.textContent = `Runtime: ${movie.runtime} minutes`;\r\n\r\n  const ratingContainer = document.createElement(\"div\");\r\n  const ratingStar = document.createElement(\"img\");\r\n  const rating = document.createElement(\"p\");\r\n  ratingContainer.classList.add(\"rating-container\");\r\n  ratingStar.classList.add(\"rating-star\");\r\n  rating.classList.add(\"rating\");\r\n\r\n  const revenue = document.createElement(\"p\");\r\n  revenue.classList.add(\"revenue\");\r\n  revenue.textContent = `$${movie.revenue}`;\r\n\r\n  const homePage = document.createElement(\"a\");\r\n  homePage.classList.add(\"homepage\");\r\n  homePage.textContent = `HomePage ${movie.homepage}`;\r\n  homePage.href = movie.homepage;\r\n  homePage.target = \"_blank\";\r\n\r\n  movieContainer.append(\r\n    posterContainer,\r\n    title,\r\n    genresContainer,\r\n    description,\r\n    releaseDate,\r\n    ageRating,\r\n    runTime,\r\n    ratingContainer,\r\n    revenue,\r\n    homePage\r\n  );\r\n  movieContainer.prepend(bookmarkButton(title, popularity));\r\n  posterContainer.append(poster);\r\n  ratingContainer.append(ratingStar, rating);\r\n};\r\n\r\n// const crewContainer = document.createElement(\"div\");\r\n// const crewList = document.createElement(\"ul\");\r\n// const director = document.createElement(\"li\");\r\n// const writers = document.createElement(\"li\");\r\n// const stars = document.createElement(\"li\");\r\n// crewContainer.classList.add(\"crew-container\");\r\n// crewList.classList.add(\"crew-list\");\r\n// director.classList.add(\"director\");\r\n// writers.classList.add(\"writers\");\r\n// stars.classList.add(\"stars\");\r\n\r\n// const videosContainer = document.createElement(\"section\");\r\n// const videosHeading = document.createElement(\"h3\");\r\n// const video = document.createElement(\"div\");\r\n// const videoPlayBtn = document.createElement(\"img\");\r\n// videosContainer.classList.add(\"videos-container\");\r\n// videosHeading.classList.add(\"videos-heading\");\r\n// video.classList.add(\"video\");\r\n// videoPlayBtn.classList.add(\"video-play-button\");\r\n\r\n// const photosContainer = document.createElement(\"section\");\r\n// const photosTitle = document.createElement(\"h3\");\r\n// const photo = document.createElement(\"div\");\r\n// photosContainer.classList.add(\"photos-container\");\r\n// photosTitle.classList.add(\"photos-title\");\r\n// photo.classList.add(\"photo\");\r\n","import { renderBookmarks } from \"./render.js\";\r\n\r\nlet movies = [];\r\n\r\nexport const saveBookmarks = () => {\r\n  localStorage.setItem(\"movies\", JSON.stringify(movies));\r\n};\r\n\r\nexport const getBookmarks = () => {\r\n  const bookmarkedMovies = localStorage.getItem(\"movies\");\r\n  if (bookmarkedMovies) {\r\n    movies = JSON.parse(bookmarkedMovies);\r\n    renderBookmarks(movies);\r\n  }\r\n  return movies;\r\n};\r\n\r\nexport const saveFilters = (filters) =>\r\n  localStorage.setItem(\"filters\", JSON.stringify(filters));\r\n\r\nexport const getFilters = () =>\r\n  JSON.parse(localStorage.getItem(\"filters\")) || { sortType: \"\" };\r\n\r\nexport const bookmarkButton = (title, popularity) => {\r\n  const bookmarkBtn = document.createElement(\"button\");\r\n  bookmarkBtn.classList.add(\"bookmark-button\");\r\n  bookmarkBtn.textContent = \"Bookmark\";\r\n\r\n  bookmarkBtn.addEventListener(\"click\", () => {\r\n    const movieObj = { title, popularity };\r\n    const alreadyBookmarked = movies.some((m) => m.title === movieObj.title);\r\n    if (!alreadyBookmarked) {\r\n      console.log(movieObj);\r\n      movies.push(movieObj);\r\n      saveBookmarks();\r\n      renderBookmarks(movies);\r\n    } else {\r\n      alert(`${title} is already in bookmarks`);\r\n    }\r\n  });\r\n\r\n  return bookmarkBtn;\r\n};\r\n","import { getFilters, saveFilters, getBookmarks } from \"./localStorage.js\";\r\nimport { renderBookmarks } from \"./render.js\";\r\n\r\nconst setSortBy = document.getElementById(\"sort-by\");\r\n\r\nconst filters = getFilters();\r\nsetSortBy.value = filters.sortType;\r\n\r\nsetSortBy.addEventListener(\"change\", (e) => {\r\n  filters.sortType = e.target.value;\r\n  saveFilters(filters);\r\n  const bookmarks = getBookmarks();\r\n  renderBookmarks(bookmarks);\r\n});\r\n\r\nexport const sortBookmarks = (bookmarks, sortType) => {\r\n  return bookmarks.slice().sort((a, b) => {\r\n    if (sortType === \"most-popular\") return b.popularity - a.popularity;\r\n    if (sortType === \"least-popular\") return a.popularity - b.popularity;\r\n    if (sortType === \"alpha-asc\") return a.title.localeCompare(b.title);\r\n    if (sortType === \"alpha-desc\") return b.title.localeCompare(a.title);\r\n    return 0;\r\n  });\r\n};\r\n","import { fetchMovieDetails } from \"./fetchMovieDetails.js\";\r\n\r\nexport const fetchMoviesPopular = async (apiKey) => {\r\n  const response = await fetch(\r\n    `https://api.themoviedb.org/3/movie/popular?language=en-US&page=1&api_key=${apiKey}`\r\n  );\r\n  const data = await response.json();\r\n  const results = data.results[0].id;\r\n  fetchMovieDetails(results, apiKey);\r\n};\r\n"],"names":["$a291d759013b4698$var$movies","$a291d759013b4698$export$f1b9a9bec1b8accb","bookmarkedMovies","localStorage","getItem","$6433e638ce53a5fb$export$8fc978d97ff76c3","JSON","parse","$a291d759013b4698$export$1933a9fe712fc1fd","sortType","$e3754996af158602$var$movieContainer","document","querySelector","$e3754996af158602$export$ce1051fab9369f1e","movie","title","popularity","console","log","replaceChildren","posterContainer","createElement","poster","classList","add","src","poster_path","movieTitle","textContent","genresContainer","genres","forEach","genre","name","append","description","releaseDate","ageRating","overview","release_date","runTime","runtime","ratingContainer","ratingStar","rating","revenue","homePage","homepage","href","target","prepend","bookmarkBtn","addEventListener","movieObj","some","m","alert","push","setItem","stringify","$e5b32fe6114233ec$var$setSortBy","getElementById","$e5b32fe6114233ec$var$filters","value","e","$6433e638ce53a5fb$var$bookmarksList","$6433e638ce53a5fb$export$224298a172524123","bookmarks","sorted","filters","slice","sort","a","b","localeCompare","li","$8595b8fa1656c103$export$a199ce1860fbd5cd","id","apiKey","response","fetch","json","$9577a2ae7792ed05$var$searchForm","$9577a2ae7792ed05$var$searchBar","$9577a2ae7792ed05$export$eb208e4123df26c9","data","results","preventDefault","userInput","formData","FormData","get"],"version":3,"file":"Movie-Database.da79a750.js.map"}